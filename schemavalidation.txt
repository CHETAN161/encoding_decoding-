var requestContent = context.getVariable("DECODED_ENCRYPTED_CONTENT")?context.getVariable("DECODED_ENCRYPTED_CONTENT"):context.getVariable("request.content"); 
context.setVariable("request.content", requestContent);
var clientReq = JSON.parse(requestContent);
var request_verb = context.getVariable("request.verb");
    try{
    var schema = {};
    if(request_verb === 'POST'){
        schema = {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "properties": {
            "mobile": {
              "type": "string"
            }
          },
          "required": [
            "mobile"
          ]
        }
    validateSchema(schema);
}
    
    else{
        var finalResponse = {
            "success": false,
            "errorcode": "404",
            "errormessage": "Invalid Request Path/Type"
        }
        throw JSON.stringify(finalResponse);
    }
}

catch (err) {
    context.setVariable("CATCH_EXCEPTION", err);
    context.setVariable("linenumber",err.lineNumber);
    throw err;
}

function validateSchema(schema){
    var data = JSON.parse(requestContent);
    var opt = tv4.validate(data, schema);
    context.setVariable("valid", opt);
    if (opt === false) {
        context.setVariable("SchemaError", tv4.error.message);
        validJson(tv4.error.message);
    }
}

function validJson(msg) {
    var finalResponse = {
        "success": false,
        "errorcode": "400",
        "errormessage": msg
    }
    throw JSON.stringify(finalResponse);
}
